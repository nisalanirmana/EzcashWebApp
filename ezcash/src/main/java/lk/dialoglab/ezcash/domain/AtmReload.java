package lk.dialoglab.ezcash.domain;

// Generated Mar 30, 2015 2:46:26 PM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AtmReload generated by hbm2java
 */
@Entity
@Table(name = "atm_reload", catalog = "cashatm")
public class AtmReload implements java.io.Serializable {

    private Integer reloadId;
    private Atm atm;
    private Operator operator;
    private Date taskCreatedTime;
    private Date taskExpiryTime;
    private Date reloadStartTime;
    private Date reloadEndTime;
    // private double amount;
    private String status;
    private int tray1;
    private int tray2;
    private int otk;
    // private int tray1Rejects;
    // private int tray2Rejects;
    private Set<Transactions> transactionses = new HashSet<Transactions>(0);

    public AtmReload() {
    }

    public AtmReload(Atm atm, Operator operator, Date taskCreatedTime, Date taskExpiryTime, Date reloadStartTime,
            Date reloadEndTime, double amount, String status, int tray1, int tray2, int tray1Rejects, int tray2Rejects,
            int otk) {
        this.atm = atm;
        this.operator = operator;
        this.taskCreatedTime = taskCreatedTime;
        this.taskExpiryTime = taskExpiryTime;
        this.reloadStartTime = reloadStartTime;
        this.reloadEndTime = reloadEndTime;
        // this.amount = amount;
        this.status = status;
        this.tray1 = tray1;
        this.tray2 = tray2;
        this.otk = otk;
        // this.tray1Rejects = tray1Rejects;
        // this.tray2Rejects = tray2Rejects;
    }

    public AtmReload(Atm atm, Operator operator, Date taskCreatedTime, Date taskExpiryTime, Date reloadStartTime,
            Date reloadEndTime, double amount, String status, int tray1, int tray2, int tray1Rejects, int tray2Rejects,
            int otk, Set<Transactions> transactionses) {
        this.atm = atm;
        this.operator = operator;
        this.taskCreatedTime = taskCreatedTime;
        this.taskExpiryTime = taskExpiryTime;
        this.reloadStartTime = reloadStartTime;
        this.reloadEndTime = reloadEndTime;
        // this.amount = amount;
        this.status = status;
        this.tray1 = tray1;
        this.tray2 = tray2;
        this.otk = otk;
        // this.tray1Rejects = tray1Rejects;
        // this.tray2Rejects = tray2Rejects;
        this.transactionses = transactionses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "reload_id", unique = true, nullable = false)
    public Integer getReloadId() {
        return this.reloadId;
    }

    public void setReloadId(Integer reloadId) {
        this.reloadId = reloadId;
    }

    @ManyToOne
    @JoinColumn(name = "atm_Id", nullable = false)
    public Atm getAtm() {
        return this.atm;
    }

    public void setAtm(Atm atm) {
        this.atm = atm;
    }

    @ManyToOne
    @JoinColumn(name = "operator_Id", nullable = false)
    public Operator getOperator() {
        return this.operator;
    }

    public void setOperator(Operator operator) {
        this.operator = operator;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "task_created_time", nullable = true, length = 19)
    public Date getTaskCreatedTime() {
        return this.taskCreatedTime;
    }

    public void setTaskCreatedTime(Date taskCreatedTime) {
        this.taskCreatedTime = taskCreatedTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "task_expiry_time", nullable = false, length = 19)
    public Date getTaskExpiryTime() {
        return this.taskExpiryTime;
    }

    public void setTaskExpiryTime(Date taskExpiryTime) {
        this.taskExpiryTime = taskExpiryTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "reload_start_time", nullable = true, length = 19)
    public Date getReloadStartTime() {
        return this.reloadStartTime;
    }

    public void setReloadStartTime(Date reloadStartTime) {
        this.reloadStartTime = reloadStartTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "reload_end_time", nullable = true, length = 19)
    public Date getReloadEndTime() {
        return this.reloadEndTime;
    }

    public void setReloadEndTime(Date reloadEndTime) {
        this.reloadEndTime = reloadEndTime;
    }

    /*
     * @Column(name="amount", nullable=true, precision=22, scale=0)
     * public double getAmount() {
     * return this.amount;
     * }
     * 
     * public void setAmount(double amount) {
     * this.amount = amount;
     * }
     */

    @Column(name = "status", nullable = true, length = 45)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "tray1_task", nullable = true)
    public int getTray1() {
        return this.tray1;
    }

    public void setTray1(int tray1) {
        this.tray1 = tray1;
    }

    @Column(name = "tray2_task", nullable = true)
    public int getTray2() {
        return this.tray2;
    }

    public void setTray2(int tray2) {
        this.tray2 = tray2;
    }

    /*
     * @Column(name="tray1_rejects", nullable=true)
     * public int getTray1Rejects() {
     * return this.tray1Rejects;
     * }
     * 
     * public void setTray1Rejects(int tray1Rejects) {
     * this.tray1Rejects = tray1Rejects;
     * }
     * 
     * 
     * @Column(name="tray2_rejects", nullable=true)
     * public int getTray2Rejects() {
     * return this.tray2Rejects;
     * }
     * 
     * public void setTray2Rejects(int tray2Rejects) {
     * this.tray2Rejects = tray2Rejects;
     * }
     */
    @Column(name = "otk", nullable = true, length = 45)
    public int getotk() {
        return this.otk;
    }

    public void setotk(int otk) {
        this.otk = otk;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "atmReload")
    public Set<Transactions> getTransactionses() {
        return this.transactionses;
    }

    public void setTransactionses(Set<Transactions> transactionses) {
        this.transactionses = transactionses;
    }

}
